debugSource('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
lambda
X[i,,drop=FALSE]
X[-i,,drop=FALSE]
Rcpp::sourceCpp('objfun.cpp')
debugSource('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
debugSource('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
debugSource('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
ans[,i]
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
ans
debugSource('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
grad(ans$par, X[i,,drop=FALSE], X[-i,,drop=FALSE])
numDeriv::grad(objfunRcpp, ans$par, x0=X[i,,drop=FALSE], X=X[-i,,drop=FALSE])
debugSource('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
debugSource('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
optim(lambda, fn=objfunRcpp, gr=grad, method = "L-BFGS-B", upper=Inf, lower=0,
x0 = X[i,,drop=FALSE], X=X[-i,,drop=FALSE], control=list(trace=6))
debugSource('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
debugSource('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
apply(ans, 2, function(x) length(which(x > 0.00001)))
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
ans
apply(ans, 2, function(x) which(x != 0))
head(apply(ans, 2, function(x) which(x != 0)))
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
X[i,]
x[i,]
x[-i,]
x[i,]
t(ans[,i]) %*% x[i,]
t(ans[,i]) %*% x[-i,]
i<-10
t(ans[,i]) %*% x[-i,];x[i,]
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
source('~/Dropbox/repos/blop/bmatch.r', echo=TRUE)
ans[,i,drop=FALSE]
t(ans[,i,drop=FALSE]) %*% x
ans[,i,drop=FALSE] %*% x
t(ans[,i,drop=FALSE]) %*% x[-i,]
t(x[i,])
install.packages("LpSolve")
install.packages("lpSolve")
install.packages("lpSolveAPI")
library(lpSolveAPI)
?lpSolveAPI::add.column
source('~/.active-rstudio-document', echo=TRUE)
my.lp
source('~/.active-rstudio-document', echo=TRUE)
my.lp
dist(rbind(c(0,0), c(0,1)))
dist(rbind(c(0,0), c(1,1)))
source('~/.active-rstudio-document', echo=TRUE)
D
source('~/.active-rstudio-document', echo=TRUE)
my.lp
source('~/.active-rstudio-document', echo=TRUE)
lpSolveAPI::set.constr.type(my.lp, c(rep(">=", n-1), "==", "=="))
my.lp
summary(my.lp)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
rm(list = ls())
library(lpSolveAPI)
set.seed(1231)
n <- 10
k <- 1
y <- matrix(rnorm(n), ncol=1)
X <- matrix(rnorm(n*k), ncol=k)
i <- 1
# Constraints:
#  sum(lambda) = 1 : 1
#  lambda*xk' = xk : k
#  TOTAL: 1 + k
#
# Variables:
#  lambda: n - 1
my.lp <- lpSolveAPI::make.lp(1 + k, n - 1)
# Objective function
#  lambda*distance
D <- apply(X[-i,,drop=FALSE], 1, function(x) dist(rbind(x, X[i,])))
lpSolveAPI::set.objfn(my.lp, D)
# Constraints
# {1 = "<=", 2 = ">=", 3 = "="}
lpSolveAPI::set.constr.type(my.lp, c(3, rep(3, k)))
lpSolveAPI::set.rhs(my.lp, c(1, X[i,]))
lpSolveAPI::set.bounds(my.lp, rep(0, 1 + k), rep(1, 1 + k))
rm(list = ls())
library(lpSolveAPI)
set.seed(1231)
n <- 10
k <- 1
y <- matrix(rnorm(n), ncol=1)
X <- matrix(rnorm(n*k), ncol=k)
i <- 1
# Constraints:
#  sum(lambda) = 1 : 1
#  lambda*xk' = xk : k
#  TOTAL: 1 + k
#
# Variables:
#  lambda: n - 1
my.lp <- lpSolveAPI::make.lp(1 + k, n - 1)
# Objective function
#  lambda*distance
D <- apply(X[-i,,drop=FALSE], 1, function(x) dist(rbind(x, X[i,])))
lpSolveAPI::set.objfn(my.lp, D)
# Constraints
# {1 = "<=", 2 = ">=", 3 = "="}
lpSolveAPI::set.constr.type(my.lp, c(3, rep(3, k)))
lpSolveAPI::set.rhs(my.lp, c(1, X[i,]))
lpSolveAPI::set.bounds(my.lp, rep(0, n - 1), rep(1, n - 1))
my.lp
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
my.lp
str(my.lp)
summary(my.lp)
print(my.lp)
write.lp(my.lp, "my.lp")
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
make.lp(3, 2)
rm(list = ls())
library(lpSolveAPI)
set.seed(1231)
n <- 10
k <- 1
y <- matrix(rnorm(n), ncol=1)
X <- matrix(rnorm(n*k), ncol=k)
i <- 1
# Constraints:
#  sum(lambda) = 1 : 1
#  lambda*xk' = xk : k
#  TOTAL: 1 + k
#
# Variables:
#  lambda: n - 1
my.lp <- lpSolveAPI::make.lp(1 + k, n - 1)
my.lp
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
my.lp
D
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
my.lp
D
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
X[i,]
solve(my.lp)
?solve
?lpSolveAPI::solve
?lpSolveAPI::solve.lpExtPtr
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
my.lp
lpSolveAPI::get.objective(my.lp)
lpSolveAPI::get.variables(my.lp)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
lpSolveAPI::get.constr.value(my.lp)
X[i,]
my.lp
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
blopi(X, 2)
X
blopi(2, i)
blopi(2, X)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
nrow(X)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
cat(sprintf("Number of statuses"))
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
ans
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
ans
str(ans)
sapply(ans, "[[", "staus")
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
ans
ans[[1]]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
ans[[1]]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
ans[[1]]
ans[[1]]$lambda
sum(ans[[1]]$lambda)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
which(sapply(ans, "[[", "status") == 2)
ans[which(sapply(ans, "[[", "status") == 2)]
?get.constraints
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
which(sapply(ans, "[[", "status") == 2)
ans
ans[[1]]
ans[[3]]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
ans[[1]]
ans[[2]]
ans[[3]]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
ans[[1]]
ans[[2]]
ans[[3]]
x[3]
X[3]
range(X)
ans
which(sapply(ans, "[[", "status") != 0)
X[which(sapply(ans, "[[", "status") != 0),]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
X[which(sapply(ans, "[[", "status") != 0),]
range(X)
ans
X
ans[[3]]
ans[[8]]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
ans[[1]]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
which(sapply(ans, "[[", "status") != 0)
ans[[51]]
ans[[1]]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
an
ans
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
ans[[1]]
ans[[2]]
ans[[3]]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans[[1]]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans[[17]]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans[[1]]
X[1,]
X[-1,]
plot(X)
plot(X[1,,drop=FALSE], col="red")
plot(X)
points(X[1,,drop=FALSE], col="red")
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
plot(X[,1:2], pch=20)
points(X[unsolved,,drop=FALSE], col="red")
plot(X[,1:2], pch=20, col="lightgray")
points(X[unsolved,,drop=FALSE], col="red")
text(X[unsolved,,drop=FALSE],text=unsolved, col="red")
text(X[unsolved,,drop=FALSE], labels =unsolved, col="red")
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans[[1]]
ans[[2]]
ans[[51]]
ans[[51]]$lambda
length(ans[[51]]$lambda)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans[[51]]
ans[[51]]$lambda
(ans[[51]]$lambda)/sum(ans[[51]]$lambda)
(ans[[51]]$lambda)/sum(ans[[51]]$lambda)*X[-51,]
length((ans[[51]]$lambda)/sum(ans[[51]]$lambda))
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
length((ans[[51]]$lambda)/sum(ans[[51]]$lambda))
(ans[[51]]$lambda)/sum(ans[[51]]$lambda)*X[-51,]
colSums((ans[[51]]$lambda)/sum(ans[[51]]$lambda)*X[-51,])
ans[[51]]$xi
plot.blopmatch_match <- function(x, y=NULL, ...) {
unsolved <- colSums(sapply(x, "[[", "slack"))
which(unsolved != 0)
}
plot.blopmatch_match <- function(x, y=NULL, ...) {
unsolved <- colSums(sapply(x, "[[", "slack"))
unsolved != 0
}
plot(ans)
length(ans)
plot.blopmatch_match <- function(x, y=NULL, ...) {
unsolved <- colSums(sapply(x, "[[", "slack"))
unsolved
}
plot(ans)
plot.blopmatch_match <- function(x, y=NULL, ...) {
unsolved <- sapply(x, "[[", "slack")
unsolved
}
plot(ans)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans <- blop(X)
ans
plot(ans)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
plot(ans)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
plot.blopmatch_match <- function(x, y=1:min(2, ncol(x$X)), ...) {
unsolved <- which(colSums(sapply(x$matches, "[[", "slack")) != 0)
plot(x$X[,y,drop=FALSE], pch=20, col="lightgray")
if (length(unsolved))
text(x$X[unsolved,y,drop=FALSE], legend = unsolved, col="red")
}
plot(ans)
ans$matches[[1]]
ans$matches[[1]]
sprintf("%.10f", ans$matches[[1]]$slack)
sum(ans$matches[[1]]$slack)
sum(ans$matches[[1]]$slack) == 0
debugSource('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans[[1]]
ans[[1]]$lambda
ans[[1]]$lambda*X[-1,,]
colSums(ans[[1]]$lambda*X[-1,,drop=FALSE])
ans[[1]]$xi
sum(ans[[1]]$lambda)
colSums(ans[[3]]$lambda*X[-3,,drop=FALSE])
ans[[3]]$xi
ans[[3]]$status
ans[[3]]$constr
ans[[3]]$slack
ans[[3]]$obj
ans[[3]]$lambda
range(ans[[3]]$lambda)
sum(ans[[3]]$lambda)
colSums(ans[[3]]$lambda*X[-3,,drop=FALSE])
X[3,]
colSums(ans[[100]]$lambda*X[-100,,drop=FALSE])
X[100,]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans[[2]]
ans$matches[[2]]
ans$matches[[2]]$lambda
ans$matches[[2]]$lambda * X[-2,]
colSums(ans$matches[[2]]$lambda * X[-2,])
X[2,]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans[[1]]
ans$matches[[1]]
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans$matches[[1]]
colSums(ans$matches[[1]]$lambda * X[-1,])
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans$matches[[1]]
ans$X
ans$X - ans$X_pred
sqrt(rowSums((ans$X - ans$X_pred)^2))
hist(sqrt(rowSums((ans$X - ans$X_pred)^2)))
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
hist(sqrt(rowSums((ans$X - ans$X_pred)^2)), breaks = 100)
summary(sqrt(rowSums((ans$X - ans$X_pred)^2)))
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
blopi(1,X)
install.packages("microbenchmar")
install.packages("microbenchmark")
microbenchmark::microbenchmark(blopi(1, X))
microbenchmark::microbenchmark(blopi(1, X), unit="s")
.014*300
.014*1e3
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
install.packages("Rglpk")
install.packages("Rglpk")
install.packages("Rglpk")
library(Rglpk)
?Rglpk_solve_LP
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
blopi(1,X)
blopi_glpk(1, X)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
blopi_glpk(1, X)
ans_glpk    <- blopi_glpk(1, X)
ans_glpk
ans_lpsolve <- blopi(1,X)
which(ans_lpsolve$lambda != 0)
which(ans_glpk$lambda != 0)
all.equal(ans_glpk$lambda, ans_lpsolve$lambda)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
ans_glpk
plot(ans)
ans
system.time(ans <- blop(X, solver = "lpsolve"))
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
source('~/Dropbox/repos/blop/lpsolveapi.r', echo=TRUE)
system.time(ans <- blop(X, solver = "glpk"))
ans
plot(ans)
ans
library(blopmatch)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "README-"
)
set.seed(1331)
X <- matrix(rnorm(20*2), ncol=2)
blopi_glpk(5, X)
ans <- blopi_glpk(5, X)
ans$lambda
X[5,]
colSums(ans$lambda*X[-5,])
